// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: tryout-user.sql

package repository

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertUser = `-- name: InsertUser :exec
INSERT INTO "user" (first_name, last_name, email, password)
VALUES ($1, $2, $3, $4)
`

type InsertUserParams struct {
	FirstName string
	LastName  string
	Email     string
	Password  string
}

func (q *Queries) InsertUser(ctx context.Context, arg *InsertUserParams) error {
	_, err := q.db.Exec(ctx, insertUser,
		arg.FirstName,
		arg.LastName,
		arg.Email,
		arg.Password,
	)
	return err
}

const loginUser = `-- name: LoginUser :one
SELECT id, password FROM "user"
WHERE email = $1
`

type LoginUserRow struct {
	ID       pgtype.UUID
	Password string
}

func (q *Queries) LoginUser(ctx context.Context, email string) (*LoginUserRow, error) {
	row := q.db.QueryRow(ctx, loginUser, email)
	var i LoginUserRow
	err := row.Scan(&i.ID, &i.Password)
	return &i, err
}
